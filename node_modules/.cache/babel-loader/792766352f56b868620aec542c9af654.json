{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.onButtonClick && $options.onButtonClick(...args)),\n    class: _normalizeClass({\n      activeButton: $data.clicked\n    })\n  }, _toDisplayString($props.text), 3\n  /* TEXT, CLASS */\n  );\n}","map":{"version":3,"mappings":";;uBAEAA,oBAES,QAFT,EAES;IAFDC,IAAI,EAAC,QAEJ;IAFcC,OAAK,yCAAEC,yDAAF,CAEnB;IAFqCC,KAAK;MAAAC,cAAiBC;IAAjB;EAE1C,CAFT,mBACEC,YADF,EACM;EAAA;EADN","names":["_createElementBlock","type","onClick","$options","class","activeButton","$data","$props"],"sourceRoot":"","sources":["/Users/chr/trap/maf/src/components/ControlButton.vue"],"sourcesContent":["<template>\n\n<button type=\"button\" @click=\"onButtonClick\" :class=\"{activeButton: clicked}\">\n{{text}}\n</button>\n\n</template>\n\n\n<script>\nexport default{\n    name: 'ControlButton',\n    props: ['text'], \n    methods: {\n        onButtonClick() {\n            if (this.clicked == true){\n                this.clicked = false\n            } else {\n                this.clicked = true\n            }\n\n\n        }\n    },\n    data() {\n        return {\n            clicked: false\n        }\n    }\n\n}\n</script>\n\n<style scoped> \n\nbutton {\n    display: block;\n    outline: none;\n    background: none;\n    border: none;\n    cursor: pointer;\n    padding: 5px 10px;\n    font-size: 1.2rem;\n    background-color: #f5f7f8;\n    border-radius: 2px;\n    font-family: 'Poppins', 'Courier New', Courier, monospace;\n}\n\n.activeButton {\n    background-color: green;\n\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}