{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-799be21b\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"AnswerArea\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"streak\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Number = _resolveComponent(\"Number\");\n\n  const _component_AnswerBox = _resolveComponent(\"AnswerBox\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.streak_val >= 3 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, _toDisplayString($data.streak_text), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"streak_block\", {\n      low_streak: $data.low_streak,\n      med_streak: $data.med_streak,\n      high_streak: $data.high_streak,\n      legendary_streak: $data.legendary_streak\n    }])\n  }, _toDisplayString($data.streak_val), 3\n  /* TEXT, CLASS */\n  )])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.numbers, i => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: i.id\n    }, [_createVNode(_component_Number, {\n      number: i.text,\n      operation: i.operation\n    }, null, 8\n    /* PROPS */\n    , [\"number\", \"operation\"])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createVNode(_component_AnswerBox, {\n    onButtonClicked: $options.buttonHandler,\n    onNewSesh: $options.createSession,\n    onShowSettings: _cache[0] || (_cache[0] = $event => {\n      _ctx.showSettings = true;\n    }),\n    onResetStreak: _cache[1] || (_cache[1] = $event => $data.streak_val = 0)\n  }, null, 8\n  /* PROPS */\n  , [\"onButtonClicked\", \"onNewSesh\"])]);\n}","map":{"version":3,"mappings":";;;;;EAEKA,KAAK,EAAC;;;;EAEFA,KAAK,EAAC;;;;;;;uBAFfC,oBAYM,KAZN,cAYM,CAVwBC,oBAAU,mBAApCD,oBAGM,KAHN,cAGM,CAFFE,oBAA+B,MAA/B,EAA+B,IAA/B,EAA+BC,iBAArBF,iBAAqB,CAA/B,EAAqB;EAAA;EAArB,CAEE,EADFC,oBAA8K,KAA9K,EAA8K;IAAzKH,KAAK,mBAAC,cAAD,EAAe;MAAAK,YAA4BH,gBAA5B;MAAsCI,YAAcJ,gBAApD;MAA8DK,aAAeL,iBAA7E;MAAwFM,kBAAmBN;IAA3G,CAAf;EAAoK,CAA9K,mBAA2JA,iBAA3J,EAAqK;EAAA;EAArK,CACE,CAHN,sCAUE,qBALFD,oBAEMQ,SAFN,EAEM,IAFN,EAEMC,YAFuBR,aAEvB,EAFkBS,CAAY,IAAX;yBAAzBV,oBAEM,KAFN,EAEM;MAFAW,GAAG,EAAED,CAAC,CAACE;IAEP,CAFN,GACIC,aAAoDC,iBAApD,EAAoD;MAA3CC,MAAM,EAAEL,CAAC,CAACM,IAAiC;MAA1BC,SAAS,EAAEP,CAAC,CAACO;IAAa,CAApD;;IAAA,2BADJ;GAEM,CAFN;;EAAA,CAKE,GADFJ,aAA4IK,oBAA5I,EAA4I;IAAhIC,eAAc,EAAEC,sBAAgH;IAAhGC,SAAQ,EAAED,sBAAsF;IAAtEE,cAAa;MAAEC,oBAAY,IAAZ;IAAY,CAAd,CAAyD;IAAhCC,aAAY,sCAAEvB,mBAAU,CAAZ;EAAoB,CAA5I;;EAAA,mCACE,CAZN","names":["class","_createElementBlock","$data","_createElementVNode","_toDisplayString","low_streak","med_streak","high_streak","legendary_streak","_Fragment","_renderList","i","key","id","_createVNode","_component_Number","number","text","operation","_component_AnswerBox","onButtonClicked","$options","onNewSesh","onShowSettings","_ctx","onResetStreak"],"sourceRoot":"","sources":["/Users/chr/trap/maf/src/components/AnswerArea.vue"],"sourcesContent":["<template>\n\n<div class=\"AnswerArea\">\n    \n    <div class=\"streak\" v-if=\"streak_val >= 3\">\n        <span> {{ streak_text }}</span>\n        <div class=\"streak_block\" v-bind:class=\"{low_streak: low_streak, med_streak: med_streak, high_streak: high_streak, legendary_streak:legendary_streak}\"> {{ streak_val }}</div>\n    </div>\n    \n    <div :key=\"i.id\" v-for=\"i in numbers\">\n        <Number :number=\"i.text\" :operation=\"i.operation\" />\n    </div>\n\n    <AnswerBox @button-clicked=\"buttonHandler\" @new-sesh=\"createSession\" @show-settings=\"showSettings = true;\" @reset-streak=\"streak_val = 0\" />\n</div>\n\n\n</template>\n\n<script>\n\nimport Number from './Number'\nimport AnswerBox from './AnswerBox'\n\n\nexport default {\n    name: 'AnswerArea',\n    components: {\n        Number,\n        AnswerBox\n    },\n    data() {\n        return {\n            numbers: [],\n            correctAnswer: 0,\n            maxDigitsForNumber1: 2,\n            maxDigitsForNumber2: 2,\n            streak_val: 22,\n            low_streak: false,\n            med_streak: false,\n            high_streak: false,\n            legendary_streak: false,\n            streak_text: 'Current streak'\n        }\n    },\n    created() {\n        this.createSession()\n \n    },\n    methods: {\n            createSession() {\n         \n\n            let maxDigitsNumber1 = \"\"\n            let maxDigitsNumber2 = \"\"\n\n            // Determine the maximum number of digits we can generate\n            for(let i=0; i < this.maxDigitsForNumber1; i++) {\n                maxDigitsNumber1 += 9\n            }\n\n            for(let i=0; i < this.maxDigitsForNumber2; i++) {\n                maxDigitsNumber2 += 9\n            }\n\n\n            // Generate the 2 numbers randomly\n            let num1 = Math.floor(Math.random() * (parseInt(maxDigitsNumber1)+1))\n            let num2 = Math.floor(Math.random() * (parseInt(maxDigitsNumber2)+1))\n\n\n            // Generate the operation (addition, subtraction, multiplication, division)\n            let x = Math.floor(Math.random() * 4)\n            let op = ''\n\n            switch(x) {\n                case 0: // Addition\n                    op = \"+\"\n                    this.correctAnswer = num1 + num2\n                    break;\n                case 1: // Subtraction\n                    op = \"-\"\n                    this.correctAnswer = num1 - num2\n                    break;\n                case 2: // Multiplication\n                    op = \"x\"\n                    this.correctAnswer = num1 * num2\n                    break;\n                case 3: // Division\n                    op = \"รท\"\n                    this.correctAnswer = num1 / num2\n                    break; \n            }\n\n\n            // Add new numbers to dict\n            this.numbers = [\n                {\n                    id:1,\n                    operation:'',\n                    text:num1\n                },\n                {\n                    id:2,\n                    operation:op,\n                    text:num2\n                }\n            ]\n        },\n        buttonHandler(ans) {\n            if(ans == this.correctAnswer) {\n\n                let audio = new Audio('correct.mp3');\n                audio.loop = false;\n                audio.play();\n                this.streak_val = this.streak_val + 1\n                this.createSession()\n\n                if (this.streak_val >= 3 && this.streak_val < 10) {\n                    this.low_streak = true\n                } else if(this.streak_val >= 10 && this.streak_val < 15) {\n                    this.med_streak = true\n                    this.low_streak = false\n                } else if(this.streak_val >= 15 && this.streak_val < 20) {\n                    this.high_streak = true\n                    this.med_streak = false\n                    this.streak_text = \"Hot streak\"\n                } else if(this.streak_val > 20) {\n                    this.legendary_streak = true\n                    this.high_streak = false\n                    this.streak_text = \"Legendary streak\"\n                }\n\n\n\n            }\n            else {\n                if (ans != \"\") {\n                this.streak_val = 0\n\n                this.low_streak = false\n                this.med_streak = false\n                this.high_streak = false\n                this.legendary_streak = false\n\n                }\n            }\n        }\n\n\n    }\n\n\n}\n\n</script>\n\n<style scoped>\n\n.AnswerArea {\n    display: flex;\n    flex-direction: column;\n    width: 75vw;\n}\n\n.streak {\n    display:flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    font-size: 1rem;\n    font-family: 'Poppins', 'Courier New', Courier, monospace;\n    font-weight: 600;\n    color: white;\n    gap: 10px;\n    margin-bottom: 20px;\n}\n\n.streak_block {\n    display: flex;\n    border: 1px solid #33cc66; \n    width: 35px;\n    height: 35px;\n    align-items: center;\n    justify-content: center;\n    border-radius: 4px;\n    background-color: #33cc66;\n    font-size: 1.3rem;\n    color: black;\n}\n\n.low_streak {\n    background-color: #33cc66;\n    border: 1px solid #33cc66; \n    color: black;\n}\n\n.med_streak {\n    background-color: #efd346;\n    border: 1px solid #efd346; \n    color: black;\n}\n\n.high_streak {\n    background-color: #f05338;\n    border: 1px solid #f05338; \n    color:white\n}\n\n.legendary_streak {\n    background-color: #a21abd;\n    border: 1px solid #a21abd;\n    color:white;\n}   \n\n\n\n@media only screen and (min-width: 768px) {\n    .AnswerArea {\n        width: 450px;\n    }\n} \n\n\n</style>"]},"metadata":{},"sourceType":"module"}