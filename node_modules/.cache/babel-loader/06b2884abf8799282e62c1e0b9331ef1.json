{"ast":null,"code":"import Number from './Number';\nimport AnswerBox from './AnswerBox';\nimport { ThisExpression } from '@babel/generator/lib/generators/expressions';\nexport default {\n  name: 'AnswerArea',\n  components: {\n    Number,\n    AnswerBox\n  },\n\n  data() {\n    return {\n      numbers: [],\n      correctAnswer: 0,\n      maxDigits: 2\n    };\n  },\n\n  created() {\n    this.createSession();\n  },\n\n  methods: {\n    createSession() {\n      let x = Math.floor(Math.random() * 3);\n      let op = '';\n      let maxDigitNumber = \"\";\n\n      for (let i = 0; i < this.maxDigits; i++) {\n        maxDigitNumber += 9;\n      }\n\n      let num1 = Math.floor(Math.random() * parseInt(maxDigitNumber));\n      let num2 = Math.floor(Math.random() * parseInt(maxDigitNumber));\n\n      if (x == 0) {\n        op = \"+\";\n        this.correctAnswer = num1 + num2;\n      } else if (x == 1) {\n        op = \"-\";\n        this.correctAnswer = num1 - num2;\n      } else if (x == 2) {\n        op = \"x\";\n        this.correctAnswer = num1 * num2;\n      } else if (x == 3) {\n        op = \"รท\";\n        this.correctAnswer = num1 / num2;\n      }\n\n      this.numbers = [{\n        id: 1,\n        operation: '',\n        text: num1\n      }, {\n        id: 2,\n        operation: op,\n        text: num2\n      }];\n    },\n\n    buttonHandler(ans) {\n      if (ans == this.correctAnswer) {\n        let audio = new Audio('correct.mp3');\n        audio.loop = false;\n        audio.play();\n        this.createSession();\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgBA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,cAAT,QAA+B,6CAA/B;AAGA,eAAe;EACXC,IAAI,EAAE,YADK;EAEXC,UAAU,EAAE;IACRJ,MADQ;IAERC;EAFQ,CAFD;;EAMXI,IAAI,GAAG;IACH,OAAO;MACHC,OAAO,EAAE,EADN;MAEHC,aAAa,EAAE,CAFZ;MAGHC,SAAS,EAAE;IAHR,CAAP;EAKH,CAZU;;EAaXC,OAAO,GAAG;IACN,KAAKC,aAAL;EAEH,CAhBU;;EAiBXC,OAAO,EAAE;IACDD,aAAa,GAAG;MAChB,IAAIE,IAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAR;MACA,IAAIC,EAAC,GAAI,EAAT;MACA,IAAIC,cAAa,GAAI,EAArB;;MAEA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,IAAI,KAAKV,SAAtB,EAAiCU,CAAC,EAAlC,EAAsC;QAClCD,cAAa,IAAK,CAAlB;MACJ;;MAEA,IAAIE,IAAG,GAAIN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBK,QAAQ,CAACH,cAAD,CAAnC,CAAX;MACA,IAAII,IAAG,GAAIR,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBK,QAAQ,CAACH,cAAD,CAAnC,CAAX;;MAEA,IAAGL,KAAK,CAAR,EAAW;QACPI,EAAC,GAAI,GAAL;QACA,KAAKT,aAAL,GAAqBY,IAAG,GAAIE,IAA5B;MACJ,CAHA,MAGO,IAAGT,KAAK,CAAR,EAAW;QACdI,EAAC,GAAI,GAAL;QACA,KAAKT,aAAL,GAAqBY,IAAG,GAAIE,IAA5B;MACJ,CAHO,MAGA,IAAGT,KAAK,CAAR,EAAW;QACdI,EAAC,GAAI,GAAL;QACA,KAAKT,aAAL,GAAqBY,IAAI,GAACE,IAA1B;MACJ,CAHO,MAGA,IAAGT,KAAK,CAAR,EAAW;QACdI,EAAC,GAAI,GAAL;QACA,KAAKT,aAAL,GAAqBY,IAAI,GAACE,IAA1B;MACJ;;MAIA,KAAKf,OAAL,GAAe,CACX;QACIgB,EAAE,EAAC,CADP;QAEIC,SAAS,EAAC,EAFd;QAGIC,IAAI,EAACL;MAHT,CADW,EAMX;QACIG,EAAE,EAAC,CADP;QAEIC,SAAS,EAACP,EAFd;QAGIQ,IAAI,EAACH;MAHT,CANW,CAAf;IAYH,CAzCI;;IA0CLI,aAAa,CAACC,GAAD,EAAM;MACf,IAAGA,GAAE,IAAK,KAAKnB,aAAf,EAA8B;QAE1B,IAAIoB,KAAI,GAAI,IAAIC,KAAJ,CAAU,aAAV,CAAZ;QACAD,KAAK,CAACE,IAAN,GAAa,KAAb;QACAF,KAAK,CAACG,IAAN;QAEA,KAAKpB,aAAL;MACJ;IACJ;;EAnDK;AAjBE,CAAf","names":["Number","AnswerBox","ThisExpression","name","components","data","numbers","correctAnswer","maxDigits","created","createSession","methods","x","Math","floor","random","op","maxDigitNumber","i","num1","parseInt","num2","id","operation","text","buttonHandler","ans","audio","Audio","loop","play"],"sourceRoot":"","sources":["/Users/chr/trap/maf/src/components/AnswerArea.vue"],"sourcesContent":["<template>\n\n<div class=\"AnswerArea\">\n    \n    <div :key=\"i.id\" v-for=\"i in numbers\">\n        <Number :number=\"i.text\" :operation=\"i.operation\" />\n    </div>\n\n    <AnswerBox @button-clicked=\"buttonHandler\" @new-sesh=\"createSession\" />\n</div>\n\n\n</template>\n\n<script>\n\nimport Number from './Number'\nimport AnswerBox from './AnswerBox'\nimport { ThisExpression } from '@babel/generator/lib/generators/expressions'\n\n\nexport default {\n    name: 'AnswerArea',\n    components: {\n        Number,\n        AnswerBox\n    },\n    data() {\n        return {\n            numbers: [],\n            correctAnswer: 0,\n            maxDigits: 2\n        }\n    },\n    created() {\n        this.createSession()\n \n    },\n    methods: {\n            createSession() {\n            let x = Math.floor(Math.random() * 3)\n            let op = ''\n            let maxDigitNumber = \"\"\n\n            for(let i=0; i < this.maxDigits; i++) {\n                maxDigitNumber += 9\n            }\n\n            let num1 = Math.floor(Math.random() * parseInt(maxDigitNumber))\n            let num2 = Math.floor(Math.random() * parseInt(maxDigitNumber))\n\n            if(x == 0) {\n                op = \"+\"\n                this.correctAnswer = num1 + num2\n            } else if(x == 1) {\n                op = \"-\"\n                this.correctAnswer = num1 - num2\n            } else if(x == 2) {\n                op = \"x\"\n                this.correctAnswer = num1*num2\n            } else if(x == 3) {\n                op = \"รท\"\n                this.correctAnswer = num1/num2\n            }\n\n\n\n            this.numbers = [\n                {\n                    id:1,\n                    operation:'',\n                    text:num1\n                },\n                {\n                    id:2,\n                    operation:op,\n                    text:num2\n                }\n            ]\n        },\n        buttonHandler(ans) {\n            if(ans == this.correctAnswer) {\n\n                let audio = new Audio('correct.mp3');\n                audio.loop = false;\n                audio.play();\n\n                this.createSession()\n            }\n        }\n\n\n    }\n\n\n}\n\n</script>\n\n<style scoped>\n\n.AnswerArea {\n    display: flex;\n    flex-direction: column;\n    width: 75vw;\n}\n\n\n</style>"]},"metadata":{},"sourceType":"module"}